{"ast":null,"code":"var _jsxFileName = \"/Users/giantrobotbee/dev/pokedex/pages/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport * as R from \"ramda\";\nconst API_URL = \"https://pokeapi.co/api/v2/\";\n\nasync function fetcher(path) {\n  const res = await fetch(API_URL + path);\n  const json = await res.json();\n  return json;\n}\n\nconst renderPokemon = mon => {\n  console.log(mon.name);\n  return __jsx(\"li\", {\n    key: mon.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, mon.name));\n};\n\nfunction HomePage() {\n  const {\n    data,\n    error\n  } = useSWR(\"pokemon\", fetcher);\n  const pokemon = data && data.results;\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"loading...\");\n  return __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, R.forEach(renderPokemon, pokemon).toArray());\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/giantrobotbee/dev/pokedex/pages/index.jsx"],"names":["useSWR","R","API_URL","fetcher","path","res","fetch","json","renderPokemon","mon","console","log","name","HomePage","data","error","pokemon","results","forEach","toArray"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AAEA,MAAMC,OAAO,GAAG,4BAAhB;;AACA,eAAeC,OAAf,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAGE,IAAX,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAOA,IAAP;AACD;;AAED,MAAMC,aAAa,GAAGC,GAAG,IAAI;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,SACE;AAAI,IAAA,GAAG,EAAEH,GAAG,CAACG,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,GAAG,CAACG,IAAX,CADF,CADF;AAKD,CAPD;;AASA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBf,MAAM,CAAC,SAAD,EAAYG,OAAZ,CAA9B;AAEA,QAAMa,OAAO,GAAGF,IAAI,IAAIA,IAAI,CAACG,OAA7B;AAEA,MAAIF,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,CAAC,CAACiB,OAAF,CAAUV,aAAV,EAAyBQ,OAAzB,EAAkCG,OAAlC,EAAL,CAAP;AACD;;AAED,eAAeN,QAAf","sourcesContent":["import useSWR from \"swr\";\nimport * as R from \"ramda\";\n\nconst API_URL = \"https://pokeapi.co/api/v2/\";\nasync function fetcher(path) {\n  const res = await fetch(API_URL + path);\n  const json = await res.json();\n  return json;\n}\n\nconst renderPokemon = mon => {\n  console.log(mon.name);\n  return (\n    <li key={mon.name}>\n      <span>{mon.name}</span>\n    </li>\n  );\n};\n\nfunction HomePage() {\n  const { data, error } = useSWR(\"pokemon\", fetcher);\n\n  const pokemon = data && data.results;\n\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n  return <ul>{R.forEach(renderPokemon, pokemon).toArray()}</ul>;\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}
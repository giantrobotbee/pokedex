{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/giantrobotbee/dev/pokedex/pages/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport * as R from \"ramda\";\nvar API_URL = \"https://pokeapi.co/api/v2/\";\n\nfunction fetcher(path) {\n  var res, json;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_URL + path));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nvar renderPokemon = function renderPokemon(mon) {\n  console.log(\"fuck\");\n  console.log(mon);\n  return __jsx(\"li\", {\n    key: mon.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, mon.name));\n};\n\nfunction HomePage() {\n  var _useSWR = useSWR(\"pokemon\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var pokemon = data && data.results;\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"loading...\");\n  return __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, R.forEach(renderPokemon, pokemon));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/giantrobotbee/dev/pokedex/pages/index.jsx"],"names":["useSWR","R","API_URL","fetcher","path","fetch","res","json","renderPokemon","mon","console","log","name","HomePage","data","error","pokemon","results","forEach"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AAEA,IAAMC,OAAO,GAAG,4BAAhB;;AACA,SAAeC,OAAf,CAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACoBC,KAAK,CAACH,OAAO,GAAGE,IAAX,CADzB;;AAAA;AACQE,UAAAA,GADR;AAAA;AAAA,2CAEqBA,GAAG,CAACC,IAAJ,EAFrB;;AAAA;AAEQA,UAAAA,IAFR;AAAA,2CAGSA,IAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,SACE;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACG,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,GAAG,CAACG,IAAX,CADF,CADF;AAKD,CARD;;AAUA,SAASC,QAAT,GAAoB;AAAA,gBACMb,MAAM,CAAC,SAAD,EAAYG,OAAZ,CADZ;AAAA,MACVW,IADU,WACVA,IADU;AAAA,MACJC,KADI,WACJA,KADI;;AAGlB,MAAMC,OAAO,GAAGF,IAAI,IAAIA,IAAI,CAACG,OAA7B;AAEA,MAAIF,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,CAAC,CAACiB,OAAF,CAAUV,aAAV,EAAyBQ,OAAzB,CAAL,CAAP;AACD;;AAED,eAAeH,QAAf","sourcesContent":["import useSWR from \"swr\";\nimport * as R from \"ramda\";\n\nconst API_URL = \"https://pokeapi.co/api/v2/\";\nasync function fetcher(path) {\n  const res = await fetch(API_URL + path);\n  const json = await res.json();\n  return json;\n}\n\nconst renderPokemon = mon => {\n  console.log(\"fuck\");\n  console.log(mon);\n  return (\n    <li key={mon.name}>\n      <span>{mon.name}</span>\n    </li>\n  );\n};\n\nfunction HomePage() {\n  const { data, error } = useSWR(\"pokemon\", fetcher);\n\n  const pokemon = data && data.results;\n\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n  return <ul>{R.forEach(renderPokemon, pokemon)}</ul>;\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}